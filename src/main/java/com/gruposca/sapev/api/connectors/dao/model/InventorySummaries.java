/*******************************************************************************
 * Aedes Alert, Support to collect data to combat dengue
 * Copyright (C) 2017 Fundaci√≥n Anesvad
 *   
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *   
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *   
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *******************************************************************************/
package com.gruposca.sapev.api.connectors.dao.model;

// Generated 15-abr-2015 13:02:34 by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;

/**
 * Visits generated by hbm2java
 */
@Entity
@Proxy(lazy = false)
@Table(name = "InventorySummaries")
public class InventorySummaries implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;	
	private Integer inspected;
	private Integer focus;
	private Integer treated;
	private Integer destroyed;
	private TableElements container;
	private Plans plans;
	private Areas areas;	

	public InventorySummaries() {
	}

	public InventorySummaries(Integer inspected, Integer focus, Integer treated, 
			Integer destroyed, TableElements container, Plans plans, Areas areas) {
		this.focus = focus;
		this.inspected = inspected;
		this.treated = treated;
		this.destroyed = destroyed;
		this.container = container;
		this.plans = plans;
		this.areas = areas;
	}

	
	public InventorySummaries(Integer id, Integer inspected, Integer focus, Integer treated, 
			Integer destroyed, TableElements container, Plans plans, Areas areas) {
		this.id = id;
		this.focus = focus;
		this.inspected = inspected;
		this.treated = treated;
		this.destroyed = destroyed;
		this.container = container;
		this.plans = plans;
		this.areas = areas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	
	@Column(name = "focus", nullable = false)
	public Integer getFocus() {
		return focus;
	}

	public void setFocus(Integer focus) {
		this.focus = focus;
	}
	
	@Column(name = "inspected", nullable = false)
	public Integer getInspected() {
		return inspected;
	}

	public void setInspected(Integer inspected) {
		this.inspected = inspected;
	}

	@Column(name = "treated", nullable = false)
	public Integer getTreated() {
		return treated;
	}

	public void setTreated(Integer treated) {
		this.treated = treated;
	}

	@Column(name = "destroyed", nullable = false)
	public Integer getDestroyed() {
		return destroyed;
	}

	public void setDestroyed(Integer destroyed) {
		this.destroyed = destroyed;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "containerId", nullable = false)
	public TableElements getContainer() {
		return this.container;
	}

	public void setContainer(TableElements container) {
		this.container = container;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "planId", nullable = false)
	public Plans getPlans() {
		return this.plans;
	}

	public void setPlans(Plans plans) {
		this.plans = plans;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "areaId")
	public Areas getAreas() {
		return this.areas;
	}

	public void setAreas(Areas areas) {
		this.areas = areas;
	}

}
