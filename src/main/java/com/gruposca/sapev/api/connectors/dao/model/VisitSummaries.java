/*******************************************************************************
 * Aedes Alert, Support to collect data to combat dengue
 * Copyright (C) 2017 Fundaci√≥n Anesvad
 *   
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *   
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *   
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *******************************************************************************/
package com.gruposca.sapev.api.connectors.dao.model;

// Generated 15-abr-2015 13:02:34 by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.math.BigDecimal;
import org.hibernate.annotations.Proxy;

/**
 * Visits generated by hbm2java
 */
@Entity
@Proxy(lazy = false)
@Table(name = "VisitSummaries")
public class VisitSummaries implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;	
	private Integer houses;
	private Integer focus;
	private Integer inspected;
	private Integer closed;
	private Integer reluctant;
	private Integer abandoned;
	private Integer treated;
	private Integer destroyed;
	private Integer people;
	private Integer febriles;
	private BigDecimal larvicide;
	private Plans plans;
	private Areas areas;	
	private Integer reconverted;
	private Integer closedReconverted;
	private Integer reluctantReconverted;
	private Integer abandonedReconverted;
	

	public VisitSummaries() {
	}

	public VisitSummaries(Integer houses, Integer focus, Integer inspected,Integer closed,Integer reluctant, Integer abandoned,
			Integer treated, Integer destroyed, Integer people, Integer febriles, BigDecimal larvicide,Plans plans, Areas areas, Integer reconverted, Integer closedReconverted, Integer reluctantReconverted, Integer abandonedReconverted) {
		this.houses = houses;
		this.focus = focus;
		this.inspected = inspected;
		this.closed = closed;
		this.reluctant = reluctant;
		this.abandoned = abandoned;
		this.treated = treated;
		this.destroyed = destroyed;
		this.people = people;
		this.febriles = febriles;
		this.larvicide = larvicide;
		this.plans = plans;
		this.areas = areas;
		this.reconverted = reconverted;
		this.closedReconverted = closedReconverted;
		this.reluctantReconverted = reluctantReconverted;
		this.abandonedReconverted = abandonedReconverted;
	}
	
	public VisitSummaries(Integer id, Integer houses, Integer focus, Integer inspected,Integer closed,Integer reluctant, Integer abandoned,
			Integer treated, Integer destroyed, Integer people, Integer febriles, BigDecimal larvicide,Plans plans, Areas areas, Integer reconverted, Integer closedReconverted, Integer reluctantReconverted, Integer abandonedReconverted) {
		this.id = id;
		this.houses = houses;
		this.focus = focus;
		this.inspected = inspected;
		this.closed = closed;
		this.reluctant = reluctant;
		this.abandoned = abandoned;
		this.treated = treated;
		this.destroyed = destroyed;
		this.people = people;
		this.febriles = febriles;
		this.larvicide = larvicide;
		this.plans = plans;
		this.areas = areas;
		this.reconverted = reconverted;
		this.closedReconverted = closedReconverted;
		this.reluctantReconverted = reluctantReconverted;
		this.abandonedReconverted = abandonedReconverted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	
	
	@Column(name = "houses", nullable = false)
	public Integer getHouses() {
		return this.houses;
	}

	public void setHouses(Integer houses) {
		this.houses = houses;
	}
	
	@Column(name = "focus", nullable = false)
	public Integer getFocus() {
		return focus;
	}

	public void setFocus(Integer focus) {
		this.focus = focus;
	}
	
	@Column(name = "inspected", nullable = false)
	public Integer getInspected() {
		return inspected;
	}

	public void setInspected(Integer inspected) {
		this.inspected = inspected;
	}

	@Column(name = "closed", nullable = false)
	public Integer getClosed() {
		return closed;
	}

	public void setClosed(Integer closed) {
		this.closed = closed;
	}

	@Column(name = "reluctant", nullable = false)
	public Integer getReluctant() {
		return reluctant;
	}

	public void setReluctant(Integer reluctant) {
		this.reluctant = reluctant;
	}

	@Column(name = "abandoned", nullable = false)
	public Integer getAbandoned() {
		return abandoned;
	}

	public void setAbandoned(Integer abandoned) {
		this.abandoned = abandoned;
	}

	@Column(name = "treated", nullable = false)
	public Integer getTreated() {
		return treated;
	}

	public void setTreated(Integer treated) {
		this.treated = treated;
	}

	@Column(name = "destroyed", nullable = false)
	public Integer getDestroyed() {
		return destroyed;
	}

	public void setDestroyed(Integer destroyed) {
		this.destroyed = destroyed;
	}

	@Column(name = "people", nullable = false)
	public Integer getPeople() {
		return people;
	}

	public void setPeople(Integer people) {
		this.people = people;
	}

	@Column(name = "febriles", nullable = false)
	public Integer getFebriles() {
		return febriles;
	}

	public void setFebriles(Integer febriles) {
		this.febriles = febriles;
	}

	@Column(name = "larvicide", nullable = false)
	public BigDecimal getLarvicide() {
		return larvicide;
	}

	public void setLarvicide(BigDecimal larvicide) {
		this.larvicide = larvicide;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "planId", nullable = false)
	public Plans getPlans() {
		return this.plans;
	}

	public void setPlans(Plans plans) {
		this.plans = plans;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "areaId")
	public Areas getAreas() {
		return this.areas;
	}

	public void setAreas(Areas areas) {
		this.areas = areas;
	}
	
	@Column(name = "reconverted", nullable = false)
	public Integer getReconverted() {
		return this.reconverted;
	}

	public void setReconverted(Integer reconverted) {
		this.reconverted = reconverted;
	}

	@Column(name = "closedReconverted", nullable = true)
	public Integer getClosedReconverted() {
		return this.closedReconverted;
	}

	public void setClosedReconverted(Integer closedReconverted) {
		this.closedReconverted = closedReconverted;
	}

	@Column(name = "reluctantReconverted", nullable = true)
	public Integer getReluctantReconverted() {
		return this.reluctantReconverted;
	}

	public void setReluctantReconverted(Integer reluctantReconverted) {
		this.reluctantReconverted = reluctantReconverted;
	}

	@Column(name = "abandonedReconverted", nullable = true)
	public Integer getAbandonedReconverted() {
		return this.abandonedReconverted;
	}

	public void setAbandonedReconverted(Integer abandonedReconverted) {
		this.abandonedReconverted = abandonedReconverted;
	}
	
}
