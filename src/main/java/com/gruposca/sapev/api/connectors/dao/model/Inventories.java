/*******************************************************************************
 * Aedes Alert, Support to collect data to combat dengue
 * Copyright (C) 2017 Fundaci√≥n Anesvad
 *   
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *   
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *   
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *******************************************************************************/
package com.gruposca.sapev.api.connectors.dao.model;

// Generated 15-abr-2015 13:02:34 by Hibernate Tools 4.3.1

import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;

/**
 * Inventories generated by hbm2java
 */
@Entity
@Proxy(lazy = false)
@Table(name = "Inventories")
public class Inventories implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private UUID uuid;
	private TableElements tableElements;
	private Visits visits;
	private Integer inspected;
	private Integer focus;
	private Integer treated;
	private Integer packet;
	private Integer destroyed;
	//private Set<Samples> sampleses = new HashSet<Samples>(0);

	public Inventories() {
	}

	public Inventories(UUID uuid, TableElements tableElements, Visits visits,
			Integer inspected, Integer focus, Integer treated, Integer packet,
			Integer destroyed) {
		this.uuid = uuid;
		this.tableElements = tableElements;
		this.visits = visits;
		this.inspected = inspected;
		this.focus = focus;
		this.treated = treated;
		this.packet = packet;
		this.destroyed = destroyed;
	}

	/*public Inventories(Integer[] uuid, TableElements tableElements, Visits visits,
			Integer inspected, Integer focus, Integer treated, Integer packet,
			Integer destroyed, Set<Samples> sampleses) {
		this.uuid = uuid;
		this.tableElements = tableElements;
		this.visits = visits;
		this.inspected = inspected;
		this.focus = focus;
		this.treated = treated;
		this.packet = packet;
		this.destroyed = destroyed;
		this.sampleses = sampleses;
	}*/

	@Id
	@Column(name = "uuid", columnDefinition = "BINARY(16)", unique = true, nullable = false)
	public UUID getUuid() {
		return this.uuid;
	}

	public void setUuid(UUID uuid) {
		this.uuid = uuid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "containerId", nullable = false)
	public TableElements getTableElements() {
		return this.tableElements;
	}

	public void setTableElements(TableElements tableElements) {
		this.tableElements = tableElements;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "visitUuid", nullable = false)
	public Visits getVisits() {
		return this.visits;
	}

	public void setVisits(Visits visits) {
		this.visits = visits;
	}

	@Column(name = "inspected", nullable = false)
	public Integer getInspected() {
		return this.inspected;
	}

	public void setInspected(Integer inspected) {
		this.inspected = inspected;
	}

	@Column(name = "focus", nullable = false)
	public Integer getFocus() {
		return this.focus;
	}

	public void setFocus(Integer focus) {
		this.focus = focus;
	}

	@Column(name = "treated", nullable = false)
	public Integer getTreated() {
		return this.treated;
	}

	public void setTreated(Integer treated) {
		this.treated = treated;
	}

	@Column(name = "packet", nullable = false)
	public Integer getPacket() {
		return this.packet;
	}

	public void setPacket(Integer packet) {
		this.packet = packet;
	}

	@Column(name = "destroyed", nullable = false)
	public Integer getDestroyed() {
		return this.destroyed;
	}

	public void setDestroyed(Integer destroyed) {
		this.destroyed = destroyed;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventories")
	public Set<Samples> getSampleses() {
		return this.sampleses;
	}

	public void setSampleses(Set<Samples> sampleses) {
		this.sampleses = sampleses;
	}*/

}
